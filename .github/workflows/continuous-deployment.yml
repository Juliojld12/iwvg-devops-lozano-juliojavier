name: CD

on:
  push:
    branches: ['master']

env:
  GHCR_URL: ghcr.io # GitHub Container Registry

jobs:
  cd:
    name: Build & Push GitHub Package & Deploy on Render Docker Image
    runs-on: ubuntu-22.04

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: 🏷️ Extract artifact from pom
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "ARTIFACT=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
          echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
          echo "NAME_LC=$(echo "$ARTIFACT" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPOSITORY=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          echo "IMAGE=ghcr.io/${OWNER_LC}/${NAME_LC}:${VERSION}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=ghcr.io/${OWNER_LC}/${NAME_LC}:latest" >> $GITHUB_ENV

      - name: 📦 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PERSONAL_ACCESS_TOKEN }}

      - name: 🐳 Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}
            ${{ env.IMAGE_LATEST }}

      - name: 🚀 Deploy on Render
        run: |
          curl --fail -X POST "https://api.render.com/deploy/${{ secrets.RENDER_DEPLOY_HOOK_TOKEN }}" \
          && echo "✅ Deployment succeeded" \
          || (echo "❌ Deployment failed" && exit 1)
