name: CD
on:
  push:
    branches: [master]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  cd:
    name: Build & Push GHCR + Trigger Render
    runs-on: ubuntu-22.04

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚òï Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: üîß Set up Buildx (docker-container driver)
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: üè∑Ô∏è Read version/artifact and compose image tags (lowercase owner/repo)
        run: |
          VERSION=$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)
          ARTIFACT=$(mvn -q help:evaluate -Dexpression=project.artifactId -DforceStdout)
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "IMAGE=${{ env.REGISTRY }}/${REPO_LC}" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${{ env.REGISTRY }}/${REPO_LC}:${VERSION}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=${{ env.REGISTRY }}/${REPO_LC}:latest" >> $GITHUB_ENV
          echo "Using image: ghcr.io/${REPO_LC}:${VERSION}"

      - name: üîê Login GHCR (GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üê≥ Build & Push (version + latest) with GHA cache
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_VERSION }}
            ${{ env.IMAGE_LATEST }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Guarda en GitHub ‚Üí Settings ‚Üí Secrets and variables ‚Üí Actions:
      # RENDER_DEPLOY_HOOK con la URL COMPLETA del hook (no solo el token)
      - name: üöÄ Trigger Render Deploy Hook
        run: |
          if [ -n "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            curl -fsS -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
            echo "Render deploy hook triggered."
          else
            echo "‚ö†Ô∏è No RENDER_DEPLOY_HOOK secret set; skipping."
          fi